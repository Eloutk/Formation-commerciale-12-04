"use client"

import { useState, useEffect } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Badge } from "@/components/ui/badge"
import { Search } from "lucide-react"
import { Button } from "@/components/ui/button"
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogFooter,
} from "@/components/ui/dialog"
import supabase from "@/utils/supabase/client"

// D√©finition de l'interface pour les termes du glossaire
interface GlossaryTerm {
  id: string
  term: string
  definition: string
  category: string
}

// Donn√©es du glossaire
const glossaryTerms: GlossaryTerm[] = [
  {
    id: "ab-testing",
    term: "A/B Testing",
    definition:
      "M√©thode de test consistant √† pr√©senter deux versions diff√©rentes d'une page web, d'une annonce ou d'un email √† deux groupes d'utilisateurs pour d√©terminer quelle version g√©n√®re les meilleurs r√©sultats.",
    category: "A",
  },
  {
    id: "audience",
    term: "Audience",
    definition:
      "Ensemble des personnes qui peuvent √™tre atteintes par une campagne publicitaire. L'audience peut √™tre d√©finie par des crit√®res d√©mographiques, g√©ographiques, comportementaux ou d'int√©r√™ts.",
    category: "A",
  },
  {
    id: "api",
    term: "API",
    definition:
      "API  : L'API Conversion de Meta est une technologie avanc√©e de suivi publicitaire qui compl√®te (et renforce) le pixel classique. Contrairement au pixel qui repose uniquement sur le navigateur, l'API Conversion fonctionne c√¥t√© serveur, ce qui permet de remonter des √©v√©nements plus fiables et plus complets, m√™me si l'utilisateur refuse les cookies ou utilise un bloqueur.\nCette API agit en parall√®le du pixel, et ensemble, ils permettent :\nun meilleur suivi des conversions (clics, achats, inscriptions‚Ä¶)\nune mesure plus pr√©cise du comportement des internautes apr√®s le clic sur la publicit√©)\nune meilleure performance de l'algorithme Meta gr√¢ce √† des donn√©es plus compl√®tes.\nüëâ Concr√®tement, d√®s qu'un internaute clique sur une publicit√© Meta, l'API Conversion permet d'envoyer directement √† Meta les actions qu'il effectue sur le site (ex. : vue d'un produit, ajout au panier, achat), m√™me si le pixel seul ne les capte pas.",
    category: "A",
  },
  {
    id: "clic",
    term: "Clic",
    definition:
      "Tout clic autour de la publicit√© (clics vers landing page, j'aime, commentaires, enregistrement de la pub, partages, etc...)",
    category: "C",
  },
  {
    id: "clic-sur-lien",
    term: "Clic sur lien",
    definition: "Uniquement les clics vers la landing page",
    category: "C",
  },
  {
    id: "conversion",
    term: "Conversion",
    definition:
      "Action souhait√©e effectu√©e par un utilisateur apr√®s avoir cliqu√© sur une publicit√© (achat, inscription, t√©l√©chargement, etc.). Le taux de conversion mesure le pourcentage de visiteurs qui effectuent cette action.",
    category: "C",
  },
  {
    id: "cpc",
    term: "CPC (Co√ªt Par Clic)",
    definition:
      "M√©trique publicitaire indiquant le co√ªt moyen pay√© pour chaque clic sur une annonce. Le CPC est calcul√© en divisant le co√ªt total de la campagne par le nombre de clics g√©n√©r√©s.",
    category: "C",
  },
  {
    id: "cpm",
    term: "CPM (Co√ªt Par Mille)",
    definition:
      "M√©trique publicitaire indiquant le co√ªt pay√© pour 1000 impressions (affichages) d'une annonce. Le CPM est utilis√© pour comparer l'efficacit√© de diff√©rentes campagnes en termes de visibilit√©.",
    category: "C",
  },
  {
    id: "ctr",
    term: "CTR (Click-Through Rate)",
    definition:
      "Taux de clics exprim√© en pourcentage, calcul√© en divisant le nombre de clics par le nombre d'impressions. Un CTR √©lev√© indique que l'annonce est pertinente et attrayante pour l'audience cibl√©e.",
    category: "C",
  },
  {
    id: "display",
    term: "Display",
    definition:
      "Format publicitaire visuel (banni√®res, images, vid√©os) diffus√© sur des sites web partenaires. Le display permet de toucher une large audience et de renforcer la notori√©t√© de marque.",
    category: "D",
  },
  {
    id: "funnel",
    term: "Funnel (Entonnoir)",
    definition:
      "Mod√®le marketing repr√©sentant le parcours client depuis la prise de conscience jusqu'√† l'achat. Chaque √©tape de l'entonnoir correspond √† un niveau d'engagement croissant avec la marque.",
    category: "F",
  },
  {
    id: "impression",
    term: "Impression",
    definition: "Nombre de fois o√π la pub s'est affich√©e √† l'√©cran",
    category: "I",
  },
  {
    id: "infos-bulles",
    term: "Infos bulles",
    definition:
      "Les infos bulles sont des accroches. Elles permettent d'afficher du texte suppl√©mentaire sur certains aspects populaires ou uniques de votre entreprise dans votre annonce. Vous pouvez ainsi mettre en avant des offres promotionnelles comme \"livraison gratuite\" ou \"service client 24h/24, 7j/7\".",
    category: "I",
  },
  {
    id: "images-search",
    term: "Images Search",
    definition:
      "Format publicitaire sp√©cifique aux moteurs de recherche (Google, Bing) qui affiche des images dans les r√©sultats de recherche. Ces annonces apparaissent dans l'onglet 'Images' et permettent d'attirer l'attention visuellement tout en ciblant des requ√™tes sp√©cifiques.",
    category: "I",
  },
  {
    id: "interaction-publication",
    term: "Interaction publication",
    definition:
      "Les interactions reprennent tout ce qui se passe autour de nos publications (clics, enregistrements, partages, j'aimes, etc...)",
    category: "I",
  },
  {
    id: "kpi",
    term: "KPI (Key Performance Indicator)",
    definition:
      "Indicateur cl√© de performance utilis√© pour mesurer l'efficacit√© d'une action marketing par rapport aux objectifs fix√©s. Les KPI courants incluent le taux de conversion, le co√ªt par acquisition, et le retour sur investissement publicitaire.",
    category: "K",
  },
  {
    id: "landing-page",
    term: "Landing Page",
    definition:
      "Page web sp√©cialement con√ßue pour recevoir le trafic provenant d'une campagne publicitaire. Elle est optimis√©e pour convertir les visiteurs en prospects ou clients en pr√©sentant une offre claire et un appel √† l'action visible.",
    category: "L",
  },
  {
    id: "liens-annexes",
    term: "Liens annexes",
    definition:
      "Les liens annexes ajoutent √† votre annonce des liens hypertextes suppl√©mentaires qui redirigent les utilisateurs vers des pages sp√©cifiques de votre site Web. Ces liens sont situ√©s en dessous des descriptions et infos bulles. Les liens annexes doivent s'accompagner d'une description. Il s'agit d'informations suppl√©mentaires positionn√©es sous les liens annexes. Cela permet aux internautes de savoir √† quoi s'attendre s'ils cliquent dessus. Les liens annexes correspondent √† des rubriques de votre site.",
    category: "L",
  },
  {
    id: "lookalike",
    term: "Lookalike",
    definition:
      "Technique de ciblage publicitaire qui consiste √† cr√©er une audience similaire √† une audience source (clients existants, visiteurs du site). Les plateformes utilisent des algorithmes pour identifier des utilisateurs ayant des caract√©ristiques similaires.",
    category: "L",
  },
  {
    id: "pixel",
    term: "Pixel",
    definition:
      "Petit code JavaScript plac√© sur un site web pour suivre les actions des visiteurs et mesurer l'efficacit√© des campagnes publicitaires. Le pixel permet de cr√©er des audiences personnalis√©es et d'optimiser les campagnes.",
    category: "P",
  },
  {
    id: "remarketing",
    term: "Remarketing",
    definition:
      "Technique publicitaire consistant √† cibler √† nouveau les utilisateurs qui ont d√©j√† visit√© un site web ou interagi avec une marque, mais n'ont pas effectu√© l'action souhait√©e (achat, inscription, etc.).",
    category: "R",
  },
  {
    id: "roas",
    term: "ROAS (Return on Ad Spend)",
    definition:
      "M√©trique mesurant le retour sur investissement publicitaire, calcul√©e en divisant le chiffre d'affaires g√©n√©r√© par le co√ªt des publicit√©s. Un ROAS de 4:1 signifie que chaque euro investi en publicit√© g√©n√®re 4 euros de revenus.",
    category: "R",
  },
  {
    id: "seo",
    term: "SEO (Search Engine Optimization)",
    definition:
      "Ensemble de techniques visant √† am√©liorer la visibilit√© d'un site web dans les r√©sultats de recherche organiques (non payants) des moteurs de recherche comme Google.",
    category: "S",
  },
  {
    id: "sea",
    term: "SEA (Search Engine Advertising)",
    definition:
      "Publicit√© payante sur les moteurs de recherche (Google Ads, Bing Ads). Contrairement au SEO, le SEA permet d'obtenir une visibilit√© imm√©diate en achetant des mots-cl√©s pertinents.",
    category: "S",
  },
  {
    id: "score-qualite",
    term: "Score Qualit√©",
    definition:
      "√âvaluation attribu√©e par les plateformes publicitaires (comme Google Ads) √† vos annonces et mots-cl√©s, bas√©e sur leur pertinence, leur taux de clics attendu et l'exp√©rience de la page de destination. Un score qualit√© √©lev√© peut r√©duire le co√ªt par clic et am√©liorer le positionnement des annonces.",
    category: "S",
  },
  {
    id: "sem",
    term: "SEM (Search Engine Marketing)",
    definition: "Le SEM regroupe l'ensemble des techniques visant √† am√©liorer la visibilit√© d'un site sur les moteurs de recherche, en combinant le SEO (r√©f√©rencement naturel), le SEA (publicit√© payante) et le SMO (optimisation sur les r√©seaux sociaux).",
    category: "S",
  },
  {
    id: "smo",
    term: "SMO (Social Media Optimization)",
    definition: "Le SMO consiste √† optimiser la pr√©sence et la visibilit√© d'une marque sur les r√©seaux sociaux (Facebook, Instagram, LinkedIn, TikTok, etc.), de mani√®re organique (non payante).",
    category: "S",
  },
  {
    id: "titres-descriptions",
    term: "Titres et descriptions",
    definition:
      "Les titres et les descriptions sont affich√©s de mani√®re al√©atoire en fonction de la requ√™te du client. Il est possible d'√©pingler 1 titre et 1 description pour rester affich√© en premi√®re position.",
    category: "T",
  },
  {
    id: "vue-youtube",
    term: "Vue Youtube (2 possibilit√©s)",
    definition:
      "Cas 1 : La vid√©o dure -30 sec. Dans ce cas une vue est une personne qui a regard√© la vid√©o en entier. Cas 2 : La vid√©o dure +30 sec. Dans ce cas une vue est une personne qui a regard√© au moins les 30 premi√®res secondes.",
    category: "V",
  },
  {
    id: "wording",
    term: "Wording",
    definition: "Textes ins√©r√©s aux abords des visuels (description, titre, etc)",
    category: "W",
  },
]

export default function GlossairePage() {
  const [searchTerm, setSearchTerm] = useState("")
  const [activeFilter, setActiveFilter] = useState("Tous")

  // Etat pour suggestion
  const [open, setOpen] = useState(false)
  const [suggestTerm, setSuggestTerm] = useState("")
  const [submitting, setSubmitting] = useState(false)
  const [pseudo, setPseudo] = useState("")
  const [userId, setUserId] = useState<string | null>(null)
  const [submitError, setSubmitError] = useState("")
  const [submitOk, setSubmitOk] = useState("")

  // supabase singleton

  useEffect(() => {
    const load = async () => {
      try {
        const { data: { session } } = await supabase.auth.getSession()
        const user = session?.user
        if (user) {
          setUserId(user.id)
          const fullName = (user.user_metadata as any)?.full_name as string | undefined
          const fallback = (user.email || "").split("@")[0]
          setPseudo(fullName && fullName.trim() ? fullName.trim() : fallback)
        }
      } catch {}
    }
    load()
  }, [])

  // Filtrer les termes en fonction de la recherche et du filtre actif
  const filteredTerms = glossaryTerms.filter((term) => {
    const matchesSearch =
      term.term.toLowerCase().includes(searchTerm.toLowerCase()) ||
      term.definition.toLowerCase().includes(searchTerm.toLowerCase())

    if (activeFilter === "Tous") {
      return matchesSearch
    } else {
      return (
        matchesSearch &&
        term.category === activeFilter
      )
    }
  })

  // Obtenir toutes les cat√©gories uniques pour les filtres
  const categories = ["Tous", ...Array.from(new Set(glossaryTerms.map((term) => term.category)))]

  const submitSuggestion = async (e: React.FormEvent) => {
    e.preventDefault()
    setSubmitError("")
    setSubmitOk("")
    if (!suggestTerm.trim()) {
      setSubmitError("Veuillez renseigner un terme.")
      return
    }
    setSubmitting(true)
    try {
      const payload: Record<string, any> = {
        term: suggestTerm.trim(),
        pseudo: pseudo || null,
      }
      if (userId) payload.user_id = userId
      const { error } = await supabase.from("glossary_suggestions").insert(payload)
      if (error) throw error
      setSubmitOk("Suggestion envoy√©e. Merci !")
      setSuggestTerm("")
      setTimeout(() => setOpen(false), 800)
    } catch (err: any) {
      const message = String(err?.message || "Impossible d'envoyer la suggestion")
      setSubmitError(message)
    } finally {
      setSubmitting(false)
    }
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="max-w-4xl mx-auto">
        <div className="flex items-start justify-between gap-4 mb-8">
          <div className="text-left">
            <h1 className="text-3xl font-bold mb-2">Glossaire</h1>
            <p className="text-muted-foreground">
              D√©couvrez les d√©finitions des termes cl√©s du marketing digital et de la publicit√© en ligne.
            </p>
          </div>
          <Button onClick={() => setOpen(true)} className="shrink-0">Sugg√©rer une d√©finition</Button>
        </div>

        {/* Barre de recherche */}
        <div className="relative mb-6">
          <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4" />
          <Input
            placeholder="Rechercher un terme..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="pl-10"
          />
        </div>

        {/* Filtres par cat√©gorie */}
        <div className="flex flex-wrap gap-2 mb-8">
          {categories.map((category) => (
            <Badge
              key={category}
              variant={activeFilter === category ? "default" : "outline"}
              className="cursor-pointer"
              onClick={() => setActiveFilter(category)}
            >
              {category}
            </Badge>
          ))}
        </div>

        {/* Liste des termes */}
        <div className="space-y-4">
          {filteredTerms.map((term) => (
            <Card key={term.id}>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  {term.term}
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground whitespace-pre-line">{term.definition}</p>
              </CardContent>
            </Card>
          ))}
        </div>

        {filteredTerms.length === 0 && (
          <div className="text-center py-8">
            <p className="text-muted-foreground">Aucun terme trouv√© pour votre recherche.</p>
          </div>
        )}
      </div>

      <Dialog open={open} onOpenChange={(v) => { setOpen(v); if (v) { setSuggestTerm(""); setSubmitError(""); setSubmitOk(""); } }}>
        <DialogContent>
          <DialogHeader>
            <DialogTitle>Proposer une d√©finition</DialogTitle>
            <DialogDescription>
              Nous √©tudierons votre proposition et ajouterons le mot cl√© et sa d√©finition.
            </DialogDescription>
          </DialogHeader>
          <form onSubmit={submitSuggestion} className="space-y-4">
            <div>
              <label className="block text-sm font-medium mb-2">Mot √† d√©finir</label>
              <Input value={suggestTerm} onChange={(e) => setSuggestTerm(e.target.value)} placeholder="Ex: Titres et descriptions" />
            </div>
            {submitError && <div className="text-sm text-red-600">{submitError}</div>}
            {submitOk && <div className="text-sm text-green-600">{submitOk}</div>}
            <DialogFooter>
              <Button type="button" variant="outline" onClick={() => setOpen(false)} disabled={submitting}>Annuler</Button>
              <Button type="submit" disabled={submitting}>{submitting ? "Envoi..." : "Envoyer"}</Button>
            </DialogFooter>
          </form>
        </DialogContent>
      </Dialog>
    </div>
  )
}
